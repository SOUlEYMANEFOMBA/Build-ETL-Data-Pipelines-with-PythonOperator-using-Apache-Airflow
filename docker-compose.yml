version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_DB: airflow
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
    volumes:
      - /c/Users/soule/Desktop/projet_perso/Build_ETL_Data_Pipeline/postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  webserver:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow_webserver
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: 'IXmfLfBkdFZQrcRh8IRtcwnVmYDfj4luOhW-3JvCIlg='
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    ports:
      - "8080:8080"
    command: >
      bash -c "
      /opt/airflow/init_airflow.sh &&
      airflow webserver"

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow_scheduler
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: 'IXmfLfBkdFZQrcRh8IRtcwnVmYDfj4luOhW-3JvCIlg='
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    command: >
      bash -c "
      airflow db init &&
      airflow scheduler"

  initdb:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: 'IXmfLfBkdFZQrcRh8IRtcwnVmYDfj4luOhW-3JvCIlg='
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    entrypoint: ["airflow", "db", "init"]

  python :
    build:
      context: .
      dockerfile: ./python-image/Dockerfile
    container_name: python_container

volumes:
  pgdata:
